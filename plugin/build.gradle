apply plugin: 'com.android.library'
// uploadArchives
apply from: rootProject.file("gradle/nexusUpload.gradle")

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION as int
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion ANDROID_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // compile fileTree(dir: 'libs', include: ['*.jar'])
    // test start
    // Junit
    testCompile 'junit:junit:4.12'
    // Mockito
    testCompile 'org.mockito:mockito-core:2.7.22'
    // Robolectric + Support v4
    testCompile 'org.robolectric:robolectric:3.3.2'
    testCompile 'org.robolectric:shadows-support-v4:3.3.2'
    // EasyMock
    testCompile "org.easymock:easymock:3.4"
    // PowerMock
    testCompile "org.powermock:powermock-core:" + POWER_MOCK_VERSION
    testCompile "org.powermock:powermock-module-junit4:" + POWER_MOCK_VERSION
    // PowerMock + EasyMock extension
    testCompile "org.powermock:powermock-api-easymock:" + POWER_MOCK_VERSION
    // test end
    compile 'com.android.support:support-annotations:' + OPEN_LIB_COM_ANDROID_SUPPORT
//    compile 'com.android.support:support-v4:' + OPEN_LIB_COM_ANDROID_SUPPORT
//    compile 'com.android.support:appcompat-v7:' + OPEN_LIB_COM_ANDROID_SUPPORT
//    compile 'com.android.support:recyclerview-v7:' + OPEN_LIB_COM_ANDROID_SUPPORT
//    compile 'com.android.support:cardview-v7:' + OPEN_LIB_COM_ANDROID_SUPPORT
//    compile 'com.android.support:design:' + OPEN_LIB_COM_ANDROID_SUPPORT
}
